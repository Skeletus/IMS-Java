/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Proveedor;

//  impots
import Menu.Menu_Ventana;
import Producto.*;
import ProductoArray.ProductArreglo;
import ProductoArray.ProductosProveedorVector;
import Kardex.*;
import KardexVector.*;
import Menu.MenuAdministrador;
import Menu.MenuProveedor;
import Tests.*;

// imports java
import java.io.BufferedReader;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUario
 */
public class Proveedor_Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Proveedor_Ventana
     */
    // instancia de la clase ayuda
    Ayudas objAyuda = new Ayudas();
    
    // instancia de la clase proveedorVector
    ProveedorVector proveedorVector = new ProveedorVector();
    // instancia de la clase prouctoVector
    ProductArreglo productoVector = new ProductArreglo();
    // isntancia de la clase ProductoProveedorVector
    ProductosProveedorVector productoProveedorVector = new ProductosProveedorVector();
    // instancia de la clase kardexVector
    kardexVector vectorKardex = new kardexVector();
    
    //modelo de tabla para la tabla de productos
    DefaultTableModel   modeloDeTabla = new DefaultTableModel();
    // modelo de tabla ventas
    DefaultTableModel   modeloDeTablaVentas = new DefaultTableModel();
    
    String rol = "";
    
    public Proveedor_Ventana(String str) 
    {
        initComponents();
        
        setRol(str);
        System.out.println("rol: " + rol);
        // creando columnas para el modelo
        modeloDeTabla.addColumn("Nombre");
        modeloDeTabla.addColumn("Marca");
        modeloDeTabla.addColumn("Descripcion");
        modeloDeTabla.addColumn("Cantidad");
        modeloDeTabla.addColumn("Precio");
        // escribiend el modelo en la tabla
        tablaProductos.setModel(modeloDeTabla);
        
        modeloDeTablaVentas.addColumn("ID VENTA");
        modeloDeTablaVentas.addColumn("ID CLIENTE");
        modeloDeTablaVentas.addColumn("ID VENDEDOR");
        modeloDeTablaVentas.addColumn("FECHA");
        modeloDeTablaVentas.addColumn("CANTIDAD COMPRADA");
        modeloDeTablaVentas.addColumn("TOTAL PAGAR");
        // setting modelo en tabla venta
        TablaB.setModel(modeloDeTablaVentas);
        
        cargarDatosTablaProducto();
    }
    
    public Proveedor_Ventana() 
    {
        initComponents();
               
        // creando columnas para el modelo
        modeloDeTabla.addColumn("Nombre");
        modeloDeTabla.addColumn("Marca");
        modeloDeTabla.addColumn("Descripcion");
        modeloDeTabla.addColumn("Cantidad");
        modeloDeTabla.addColumn("Precio");
        // escribiend el modelo en la tabla
        tablaProductos.setModel(modeloDeTabla);
        cargarDatosTablaProducto();
    }
    
    public void setRol(String str)
    {
        rol = str;
    }
    
    public String rolUsuario = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        BotonRegresar4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaB = new javax.swing.JTable();
        btnMostrarVentas = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        BotonRegresar5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        agregarStock = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        listProduct = new javax.swing.JComboBox<>();
        txtCantidad = new javax.swing.JTextField();
        listProveedores = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        priceModify = new javax.swing.JTextField();
        btnMostrarProductos = new javax.swing.JButton();
        btnCargarCboBoxProveedores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        BotonRegresar4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        BotonRegresar4.setText("Regresar");
        BotonRegresar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegresar4ActionPerformed(evt);
            }
        });

        TablaB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TablaB);

        btnMostrarVentas.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        btnMostrarVentas.setText("Mostrar");
        btnMostrarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarVentasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMostrarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonRegresar4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonRegresar4)
                    .addComponent(btnMostrarVentas))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Balance de Ventas", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        BotonRegresar5.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        BotonRegresar5.setText("Regresar");
        BotonRegresar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegresar5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Square721 BT", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("AÑADIR MAS STOCK");

        agregarStock.setText("Añadir ");
        agregarStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarStockActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Seleccionar producto");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Cantidad: ");

        listProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProductActionPerformed(evt);
            }
        });

        listProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProveedoresActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Seleccionar proveedor");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaProductos);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel6);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Precio");

        btnMostrarProductos.setText("Mostrar Productos");
        btnMostrarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarProductosActionPerformed(evt);
            }
        });

        btnCargarCboBoxProveedores.setText("Cargar/Actalziar Listas");
        btnCargarCboBoxProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCboBoxProveedoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnMostrarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonRegresar5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceModify)
                                    .addComponent(txtCantidad)))
                            .addComponent(btnCargarCboBoxProveedores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(listProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(listProveedores, 0, 91, Short.MAX_VALUE)))
                            .addComponent(agregarStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(btnCargarCboBoxProveedores)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(agregarStock, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(11, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(BotonRegresar5)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnMostrarProductos)
                        .addGap(19, 19, 19))))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Añadir Stock", jPanel3);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BotonRegresar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegresar5ActionPerformed
        // REGRESAR AL MENU PRINCIPAL
        if ( rol.equals("admin"))
        {
            MenuAdministrador jf1 = new MenuAdministrador("admin");
            jf1.show();

            dispose();
        }
        if( rol.equals("proveedor"))
        {
            MenuProveedor jf1 = new MenuProveedor("proveedor");
            jf1.show();

            dispose();
        }
        
    }//GEN-LAST:event_BotonRegresar5ActionPerformed

    private void BotonRegresar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegresar4ActionPerformed
        // REGRESAR AL MENU PRINCIPAL

        if ( rol.equals("admin"))
        {
            MenuAdministrador jf1 = new MenuAdministrador("admin");
            jf1.show();

            dispose();
        }
        if( rol.equals("proveedor"))
        {
            MenuProveedor jf1 = new MenuProveedor("proveedor");
            jf1.show();

            dispose();
        }
    }//GEN-LAST:event_BotonRegresar4ActionPerformed

    public void agregarItemComboBoxProducto(String proveedorSelected)
    {
        listProduct.removeAllItems();
        String proveedorSeleccionado     = proveedorSelected;
        ArrayList<String> listaProductos = objAyuda.getProductoDeProveedor(proveedorSeleccionado);
        
        for (int i =0; i <listaProductos.size(); i++)
        {
            listProduct.addItem(listaProductos.get(i));
        }
        
        listProduct.setSelectedIndex(0);
        listProduct.setSelectedItem(0);
    }
    
    public void agregarItemComboBoxPrOVEEDORES()
    {
        listProveedores.removeAllItems();
        ArrayList<String> listaProveedor =  objAyuda.obetenerListaDeProveedores();
        
        for (int i =0; i <listaProveedor.size(); i++)
        {
            listProveedores.addItem(listaProveedor.get(i));
        }
        listProveedores.setSelectedIndex(0);
        listProveedores.setSelectedItem(0);
    }
    
    
    public void cargarDatosTablaProducto()
    {
        modeloDeTabla.setRowCount(0);
        // creacion de arreglo para guardar los datos y subirlos a la tabla
        String datosMostrar[] = new String[5];
        // datos
        String partesLocal[] = null;
        try
        {
            String lineaLocal;
            FileReader     fr     = new FileReader("ListaProductos.csv");
            BufferedReader lector = new BufferedReader(fr); // el lector ya tiene el archivo
            // imprimiendo el archivo
            while( (lineaLocal = lector.readLine()) != null) 
            // obten la primera linea del archivo, y si la linea no hay nada,entonces termina
            {
                partesLocal = lineaLocal.split(","); // hasta que encuentra coma cambia de parte
                for (int i=0; i < partesLocal.length; i++)
                {
                    datosMostrar[0] = partesLocal[1]; // nombre
                    datosMostrar[1] = partesLocal[2]; // marca
                    datosMostrar[2] = partesLocal[3]; // definicion
                    datosMostrar[3] = partesLocal[4]; // cantidad
                    datosMostrar[4] = partesLocal[5]; // precio
                    //System.out.println(partes[i] + "     ");
                }
                modeloDeTabla.addRow(datosMostrar);
            }
            lector.close();
            fr.close();
        }
        catch(Exception e) // lanzar un mensaje en caso de que suceda un error
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error de tipo: " + e);
        }
    }
    
    private void listProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProductActionPerformed
        // TODO add your handling code here:
        // borrar todos q no se acumulen
        
    }//GEN-LAST:event_listProductActionPerformed

    private void agregarStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarStockActionPerformed
        // TODO add your handling code here:
        try
        {
            if( txtCantidad.getText().equals("") || priceModify.getText().equals("")
                || listProduct.getSelectedItem().toString().equals("...")
                || listProveedores.getSelectedItem().toString().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Rellene todos los campos para continuar");
            }
            else
            {
                String proveedor         = listProveedores.getSelectedItem().toString();
                String nombreProducto    = listProduct.getSelectedItem().toString();
                
                // vaciar los vectores de memoria 
                productoProveedorVector.vaciarArreglo();
                vectorKardex.vaciarVector();
                
                // cargar al arreglo los datos de acuerdo al producto y proveedor
                vectorKardex.cargardatos_archivo_vector(nombreProducto, proveedor);
                productoProveedorVector.cargardatos_archivo_vector(proveedor);
                
                // variables para el kardex
                String codigoKardex      = vectorKardex.correlativo();
                String tipoDocmnto       = objAyuda.generarCodigoFactura();  //generar BO2-3463
                String fecha             = objAyuda.getFecha(); // obteniendo fecha
                int    cantidadDeEntrada = Integer.parseInt(txtCantidad.getText());
                double precioDeEntrada   = Double.parseDouble(priceModify.getText());
                double valorEntrada      = cantidadDeEntrada * precioDeEntrada;
                double valorEntradRedondeado = objAyuda.redondearPrecio(valorEntrada);
                
                // ultimo kardex ingresado
                kardex kardexUltimo   = vectorKardex.obtenerUltimoKardex();

                // variablaes para modificar con los neuvos datos el producto
                int     nuevoStock      = 0;
                double  nuevoSaldoValor = 0;   
                double  nuevoPrecio     = 0;
                double  valorUnitario   = 0;

                // realizando calculos
                nuevoStock      = kardexUltimo.getSaldoCant() + cantidadDeEntrada;
                nuevoSaldoValor = kardexUltimo.getSaldoValor() + valorEntrada;
                double saldoValorRedondeado = objAyuda.redondearPrecio(nuevoSaldoValor);
                // calculando valor unitario
                valorUnitario   = nuevoSaldoValor / nuevoStock;
                double valorUnitarioRedondeado = objAyuda.redondearPrecio(valorUnitario);
                nuevoPrecio     = nuevoSaldoValor / nuevoStock;
                // realizando aumento de 20% y el igv
                nuevoPrecio     = nuevoPrecio + (0.2  * nuevoPrecio);
                nuevoPrecio     = nuevoPrecio + (0.18* nuevoPrecio);
                
                // ingresando datos al kardex
                /*
                constructor para cuando se aumenta  el stock 
                public kardex(String codigo, String tipoDocumento, String fecha,
                          int entradaCant, double entradaValor, double valorUnitario,
                          int saldoCant, double saldoValor,
                          double precioProducto) 
                */           
                kardex   kardexEntrada        = new kardex(codigoKardex, tipoDocmnto, fecha,
                                                        cantidadDeEntrada,valorEntradRedondeado, valorUnitarioRedondeado,
                                                        nuevoStock, saldoValorRedondeado, nuevoPrecio);
                
                // creando objeto producto para modoficarlo buscarNombreProveedor
                Producto objProductoModificar           = productoVector.buscarNombreProveedor(nombreProducto, proveedor);
                Producto objProductoProveedorModificar  = productoProveedorVector.buscarNombreProveedor(nombreProducto, proveedor);
                Proveedor proveedorEncontrado           = proveedorVector.buscarPorNombre(proveedor);
               
                //precioModificar;
                boolean estadoProductoGeneral   = productoVector.verificarExistenciaProducto(objProductoModificar.getCodigoProducto());
                boolean estadoProductoProveedor = productoProveedorVector.verificarExistenciaProducto(
                                                    objProductoProveedorModificar.getCodigoProducto());
                System.out.println("\nestadoProductoGeneral: " + estadoProductoGeneral
                                    + "\nestadoProductoProveedor" + estadoProductoProveedor);
                System.out.println("codigo: " + objProductoModificar.getCodigoProducto());
                if (estadoProductoGeneral == true && estadoProductoProveedor == true)
                {
                    //JOptionPane.showMessageDialog(null,"Existe el producto!");
                    //  redondeando el precio
                    double precioRedondeado = objAyuda.redondearPrecio(nuevoPrecio);
                    
                    // modificando en lista general de productos
                    objProductoModificar.setCantidad(nuevoStock);
                    objProductoModificar.setPrecio(precioRedondeado);
                    
                    // modificando en lista espceifica producto-Proveedor
                    objProductoProveedorModificar.setCantidad(nuevoStock);
                    objProductoProveedorModificar.setPrecio(precioRedondeado);
                    
                    // actualizando cantidad de producto
                    proveedorEncontrado.setCantidadDeProductos(
                            proveedorEncontrado.getCantidadDeProductos() + cantidadDeEntrada);
                    
                    // guardar en el archivo el kardex añadido
                    vectorKardex.agregarRegistroAlKardex(kardexEntrada);
                    vectorKardex.grabarEnArchivo(kardexEntrada, nombreProducto, proveedor); // se agrega el nuevo registro al archivo
                    productoVector.grabarModificareliminar(); // se actualizan los nuevos datos
                    productoProveedorVector.grabarModificareliminar(proveedor); // se actualizan los nuevos datos
                    proveedorVector.grabarModificareliminar();
                    
                    JOptionPane.showMessageDialog(null,"Se agrego mas stock al producto correctamente!");
                    limpiarFields();
                    
                }
                else
                {
                    String msg = "El producto seleccionado no existe";
                    System.out.println(msg);
                    JOptionPane.showMessageDialog(null,msg);
                }
            }
        }
        catch(Exception e)
        {
            String msgException = "\nnExcepcion en btnAgregarStock: " + e;
            System.out.println("\nnExcepcion en btnAgregarStock: " + e);
            JOptionPane.showMessageDialog(null,msgException);
        }

    }//GEN-LAST:event_agregarStockActionPerformed

    public void limpiarFields()
    {
        txtCantidad.setText("");
        priceModify.setText("");
        listProveedores.setSelectedIndex(0);
        listProduct.setSelectedIndex(0);
        txtCantidad.grabFocus();
    }
    
    public void cargarDatosTablaVentas()
    {
        modeloDeTablaVentas.setRowCount(0);
        // creacion de arreglo para guardar los datos y subirlos a la tabla
        String datosMostrar[] = new String[6];
        // datos
        String partesLocal[] = null;
        try
        {
            String lineaLocal;
            FileReader     fr     = new FileReader("listaVentas.csv");
            BufferedReader lector = new BufferedReader(fr); // el lector ya tiene el archivo
            // imprimiendo el archivo
            while( (lineaLocal = lector.readLine()) != null) 
            // obten la primera linea del archivo, y si la linea no hay nada,entonces termina
            {
                partesLocal = lineaLocal.split(","); // hasta que encuentra coma cambia de parte
                for (int i=0; i < partesLocal.length; i++)
                {
                    datosMostrar[0] = partesLocal[0]; // ID VENTA
                    datosMostrar[1] = partesLocal[1]; // ID CLIENTE
                    datosMostrar[2] = partesLocal[2]; // ID VENDEDOR
                    datosMostrar[3] = partesLocal[3]; // FECHA
                    datosMostrar[4] = partesLocal[4]; // CANTIDAD
                    datosMostrar[5] = partesLocal[5]; // PAGO TOTAL
                    //System.out.println(partes[i] + "     ");
                }
                modeloDeTablaVentas.addRow(datosMostrar);
            }
            lector.close();
            fr.close();
        }
        catch(Exception e) // lanzar un mensaje en caso de que suceda un error
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al cargar la tabla Producto de tipo: " + e);
        }
    }
    
    private void btnMostrarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarVentasActionPerformed
        // TODO add your handling code here:
        cargarDatosTablaVentas();
    }//GEN-LAST:event_btnMostrarVentasActionPerformed

    private void listProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProveedoresActionPerformed
        // TODO add your handling code here:
        try
        {
            String proveedorSeleccionado = listProveedores.getSelectedItem().toString();
            agregarItemComboBoxProducto(proveedorSeleccionado);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_listProveedoresActionPerformed

    private void btnMostrarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarProductosActionPerformed
        // TODO add your handling code here:
        cargarDatosTablaProducto();
    }//GEN-LAST:event_btnMostrarProductosActionPerformed

    private void btnCargarCboBoxProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCboBoxProveedoresActionPerformed
        // TODO add your handling code here:
        agregarItemComboBoxPrOVEEDORES();
        listProduct.removeAllItems();
        listProduct.addItem("...");
        listProduct.setSelectedIndex(0);
        listProduct.setSelectedItem(0);
    }//GEN-LAST:event_btnCargarCboBoxProveedoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedor_Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedor_Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedor_Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedor_Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proveedor_Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonRegresar4;
    private javax.swing.JButton BotonRegresar5;
    private javax.swing.JTable TablaB;
    private javax.swing.JButton agregarStock;
    private javax.swing.JButton btnCargarCboBoxProveedores;
    private javax.swing.JButton btnMostrarProductos;
    private javax.swing.JButton btnMostrarVentas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> listProduct;
    private javax.swing.JComboBox<String> listProveedores;
    private javax.swing.JTextField priceModify;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
