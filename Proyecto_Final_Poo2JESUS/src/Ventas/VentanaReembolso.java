/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventas;

import Kardex.kardex;
import KardexVector.kardexVector;
import Menu.MenuVendedor;
import Personas.Cliente;
import Personas.ClienteVector;
import Producto.Producto;
import ProductoArray.ProductArreglo;
import ProductoArray.ProductosProveedorVector;
import Proveedor.Proveedor;
import Proveedor.ProveedorVector;
import Tests.Ayudas;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus
 */
public class VentanaReembolso extends javax.swing.JFrame {

    /**
     * Creates new form VentanaReembolso
     */
    
    // instancia de la clase VentaVector
    VentaVector ventasVector = new VentaVector();
    // instancia de la clase DetalleVentaVector;
    DetalleVentaVector detalleVentasVector = new DetalleVentaVector();
    // instancia de la clase Cliente
    ClienteVector clienteVector = new ClienteVector();
    // instancia de la clase proveedorVector
    ProveedorVector proveedorvector = new ProveedorVector();
    //instancia de la clase KardxVector
    kardexVector vectorKardex = new kardexVector();
    // instancia de la clase productoVector (general)
    ProductArreglo vectorProductoGeneral = new ProductArreglo();
    //instancia de la clase productoProveedorVector (especifico)
    ProductosProveedorVector vectorProductoEspecifico = new ProductosProveedorVector();
    // instancia de la clase Tests
    Ayudas objAyuda = new Ayudas();
    // modelo tabla Carrito
    DefaultTableModel modeloTablaUltimasCompras = new DefaultTableModel();
    
    String IDCliente="";
    ArrayList<kardex> arrayKadexReembolso = new ArrayList<>();
    
    public VentanaReembolso() {
        initComponents();
        modeloTablaUltimasCompras.addColumn("ID VENTA");
        modeloTablaUltimasCompras.addColumn("ID PRODUCTO");
        modeloTablaUltimasCompras.addColumn("CANTIDAD COMPRADA");
        modeloTablaUltimasCompras.addColumn("BOLETA");
        jTable1.setModel(modeloTablaUltimasCompras);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboBoxIDClientes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomCliente = new javax.swing.JTextField();
        txtDNICliente = new javax.swing.JTextField();
        txtComprasCliente = new javax.swing.JTextField();
        btnEmpezarReembolso = new javax.swing.JButton();
        btnCargarCboBoxCodCliente = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCargarTablaCompras = new javax.swing.JButton();
        btnCargaCboBoxIDProduct = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cboBoxIDProductos = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNomProducto = new javax.swing.JTextField();
        txtCantCompradaProducto = new javax.swing.JTextField();
        btnReembolsarProducto = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnTerminarReembolso = new javax.swing.JButton();
        btnReembolsarTodo = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 153, 153));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleecionar codigo del cliente: ");

        cboBoxIDClientes.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        cboBoxIDClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBoxIDClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBoxIDClientesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DNI: ");

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Datos: ");

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Compras realizadas: ");

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nombre:");

        txtNomCliente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        txtNomCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDNICliente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        txtDNICliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtComprasCliente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        txtComprasCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnEmpezarReembolso.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnEmpezarReembolso.setText("Ver productos a reemboslar");
        btnEmpezarReembolso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpezarReembolsoActionPerformed(evt);
            }
        });

        btnCargarCboBoxCodCliente.setText("Cargar Lista desplegable de codigos de Cliente");
        btnCargarCboBoxCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCboBoxCodClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCargarCboBoxCodCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEmpezarReembolso, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(txtNomCliente)
                    .addComponent(cboBoxIDClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDNICliente)
                    .addComponent(txtComprasCliente))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnCargarCboBoxCodCliente)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboBoxIDClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDNICliente))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtComprasCliente)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnEmpezarReembolso)
                .addGap(19, 19, 19))
        );

        txtNomCliente.setEditable(false);
        txtDNICliente.setEditable(false);
        txtComprasCliente.setEditable(false);

        jTabbedPane1.addTab("Seleccionar Cliente", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel4);

        btnCargarTablaCompras.setText("Cargar Lista Productos Comprados");
        btnCargarTablaCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarTablaComprasActionPerformed(evt);
            }
        });

        btnCargaCboBoxIDProduct.setText("Cargar Lista desplegable");
        btnCargaCboBoxIDProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaCboBoxIDProductActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Cantidad Comprada: ");

        cboBoxIDProductos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        cboBoxIDProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBoxIDProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBoxIDProductosActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Producto: ");

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Nombre: ");

        txtNomProducto.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        txtNomProducto.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCantCompradaProducto.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        txtCantCompradaProducto.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnReembolsarProducto.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnReembolsarProducto.setText("Reembolsar Producto");
        btnReembolsarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReembolsarProductoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Seleccionar Codigo del");

        btnTerminarReembolso.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnTerminarReembolso.setText("Terminar Reembolso");
        btnTerminarReembolso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarReembolsoActionPerformed(evt);
            }
        });

        btnReembolsarTodo.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnReembolsarTodo.setText("Rembolsar Todos los productos");
        btnReembolsarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReembolsarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnCargarTablaCompras, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(btnCargaCboBoxIDProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboBoxIDProductos, 0, 210, Short.MAX_VALUE)
                            .addComponent(txtCantCompradaProducto)
                            .addComponent(txtNomProducto, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(btnReembolsarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTerminarReembolso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReembolsarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnCargarTablaCompras)
                                .addGap(18, 31, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCargaCboBoxIDProduct)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cboBoxIDProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantCompradaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(btnReembolsarProducto)
                        .addGap(18, 18, 18)
                        .addComponent(btnReembolsarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTerminarReembolso))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        txtNomProducto.setEditable(false);
        txtCantCompradaProducto.setEditable(false);

        jTabbedPane1.addTab("Realizar Reembolso", jPanel3);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegresar)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegresar)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void cargarCboBoxCodClientes()
    {
        cboBoxIDClientes.removeAllItems();
        ArrayList<String> listaProductos = objAyuda.cargarCodigosClientes();
               
        for (int i =0; i <listaProductos.size(); i++)
        {
            cboBoxIDClientes.addItem(listaProductos.get(i));
        }
        
        cboBoxIDClientes.setSelectedIndex(0);
        cboBoxIDClientes.setSelectedItem(0);
    }
    
    private void btnCargarCboBoxCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCboBoxCodClienteActionPerformed
        // TODO add your handling code here:
        cargarCboBoxCodClientes();
    }//GEN-LAST:event_btnCargarCboBoxCodClienteActionPerformed

    private void cboBoxIDClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBoxIDClientesActionPerformed
        // TODO add your handling code here:
        try
        {
            String codClienteSeleccionado = cboBoxIDClientes.getSelectedItem().toString();
            Cliente objClienteBuscar = clienteVector.buscarcodigo(codClienteSeleccionado);
            
            String nombreCLiente = objClienteBuscar.getNombre();
            String DniCliente = objClienteBuscar.getDNI();
            int comprasRealizadas = objClienteBuscar.getComprasTotales();
            
            txtNomCliente.setText(nombreCLiente);
            txtDNICliente.setText(DniCliente);
            txtComprasCliente.setText(Integer.toString(comprasRealizadas));
        }
        catch(Exception e)
        {
            System.out.println("Ezcepcin en cboBoxProveedor " + e);
        }
    }//GEN-LAST:event_cboBoxIDClientesActionPerformed

    public void mostrarUltimasComprasEnTabla(String idVentaActual)
    {
        modeloTablaUltimasCompras.setRowCount(0);
        // creacion de arreglo para guardar los datos y subirlos a la tabla
        String datosMostrar[] = new String[4];
        // datos
        try
        {
            int i = 0;
            while(  i < detalleVentasVector.rows() ) 
            // obten la primera linea del archivo, y si la linea no hay nada,entonces termina
            {
                if(detalleVentasVector.get(i).getID_Venta().equals(idVentaActual))
                {
                    String IDveenta = detalleVentasVector.get(i).getID_Venta();
                    String IDProducto = detalleVentasVector.get(i).getID_Producto();
                    int cantidadVendida = detalleVentasVector.get(i).getCantidadVendidaProducto();
                    String codigoBoleta = detalleVentasVector.get(i).getCodigoBoleta();
                
                    datosMostrar[0] = IDveenta; // nombre
                    datosMostrar[1] = IDProducto; // marca
                    datosMostrar[2] = Integer.toString(cantidadVendida); // definicion
                    datosMostrar[3] = codigoBoleta; // definicion
                    modeloTablaUltimasCompras.addRow(datosMostrar);
                }                
                i++;
            }
        }
        catch(Exception e) // lanzar un mensaje en caso de que suceda un error
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al cargar la tabla Producto de tipo: " + e);
        }
    }
    
    private void btnEmpezarReembolsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpezarReembolsoActionPerformed
        // TODO add your handling code here:
        try
        {
            // verificar q los fields no esten vacios
            if( txtNomCliente.getText().equals("") || txtDNICliente.getText().equals(null)
                 || txtComprasCliente.getText().equals(null))
            {
                JOptionPane.showMessageDialog(null, "Complete todos los campos");
            }
            else
            {
                String codClienteSeleccionado = cboBoxIDClientes.getSelectedItem().toString();
                Cliente objClienteBuscar = clienteVector.buscarcodigo(codClienteSeleccionado);
                int cantidadComprada = objClienteBuscar.getComprasTotales();
                if ( cantidadComprada == 0)
                {
                    JOptionPane.showMessageDialog(null, "Este cliente no ha comprado ");
                }
                else
                {
                    detalleVentasVector.vaciarVector();
                    IDCliente = cboBoxIDClientes.getSelectedItem().toString();
                    
                    //String ultimoIDVentaGenerado = ventasVector.getIDUltimaVenta();
                    //System.out.println("ultima venta: " + ultimoIDVentaGenerado);
                    
                    // redirreccionar al otro panel
                    jTabbedPane1.setSelectedIndex(1);
                    jTabbedPane1.setEnabledAt(0, false);
                    
                    // cargar el detalle de compra de acuerdo al codigo del cliente
                    detalleVentasVector.cargardatos_archivo_vector(IDCliente);
                    // obtener el ultimo ID de Venta de Compra del Cliente
                    String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
                    // mostrat las ultimas compras del cliente
                    mostrarUltimasComprasEnTabla(ultimoIDVentaIDCliente);
                    
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Ezcepcin en cboBoxProveedor " + e);
        }
    }//GEN-LAST:event_btnEmpezarReembolsoActionPerformed

    private void btnTerminarReembolsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarReembolsoActionPerformed
        // TODO add your handling code here:
        // librera memoria
        arrayKadexReembolso.clear();
        vectorProductoEspecifico.vaciarArreglo();
        vectorKardex.vaciarVector();
        detalleVentasVector.vaciarVector();
        // regresar a panel de selecciond e cliente
        jTabbedPane1.setSelectedIndex(0);
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, false);
        
        txtNomProducto.setText("");
        txtCantCompradaProducto.setText("");
    }//GEN-LAST:event_btnTerminarReembolsoActionPerformed

    private void btnCargarTablaComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarTablaComprasActionPerformed
        // TODO add your handling code here:
        String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
        mostrarUltimasComprasEnTabla(ultimoIDVentaIDCliente);
    }//GEN-LAST:event_btnCargarTablaComprasActionPerformed

    public void cargarCboBoxIDProductos(String IDVentaActual)
    {
        cboBoxIDProductos.removeAllItems();
        ArrayList<String> listaProductos = objAyuda.getListaIDProductos(IDVentaActual, IDCliente);
               
        for (int i =0; i <listaProductos.size(); i++)
        {
            cboBoxIDProductos.addItem(listaProductos.get(i));
        }
        
        cboBoxIDProductos.setSelectedIndex(0);
        cboBoxIDProductos.setSelectedItem(0);
    }
    
    private void btnCargaCboBoxIDProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaCboBoxIDProductActionPerformed
        // TODO add your handling code here:
        String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
        cargarCboBoxIDProductos(ultimoIDVentaIDCliente);
    }//GEN-LAST:event_btnCargaCboBoxIDProductActionPerformed

    private void cboBoxIDProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBoxIDProductosActionPerformed
        // TODO add your handling code here:
        try
        {
            String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
            String IDProductoSelccionado = cboBoxIDProductos.getSelectedItem().toString();
            Producto productoBuscar = vectorProductoGeneral.buscarcodigo(IDProductoSelccionado);
            
            String nombreProducto = productoBuscar.getNombre();
            String cantidadComprada = Integer.toString(
                                     detalleVentasVector.getCantidadComprada(
                                     ultimoIDVentaIDCliente, IDProductoSelccionado));
            
            txtNomProducto.setText(nombreProducto);
            txtCantCompradaProducto.setText(cantidadComprada);
        }
        catch(Exception e)
        {
            System.out.println("Excepcion en cboBoxIdProductos: " + e);
        }
    }//GEN-LAST:event_cboBoxIDProductosActionPerformed

    private void btnReembolsarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReembolsarProductoActionPerformed
        // TODO add your handling code here:
        // cargar el kardex del producto seleccionado
        try
        {
            vectorProductoEspecifico.vaciarArreglo();
            detalleVentasVector.vaciarVector();
            vectorKardex.vaciarVector();
            
            String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
            String IDProductoSeleccionado = cboBoxIDProductos.getSelectedItem().toString();
            String nombreProducto         = txtNomProducto.getText();
            
            Producto productEncontrado    = vectorProductoGeneral.buscarcodigo(IDProductoSeleccionado);
            
            String nombreProveedor = productEncontrado.getProveedor();
            vectorProductoEspecifico.cargardatos_archivo_vector(nombreProveedor);
            vectorKardex.cargardatos_archivo_vector(nombreProducto, nombreProveedor);
            detalleVentasVector.cargardatos_archivo_vector(IDCliente);
            
            Proveedor proveEncontrado             = proveedorvector.buscarPorNombre(nombreProveedor);
            Producto  productEncontradoEspecifico = vectorProductoEspecifico.buscarcodigo(IDProductoSeleccionado);

            // ubicar la boleta
            String boletaBuscada = detalleVentasVector.getBoletaBuscada(ultimoIDVentaIDCliente, IDProductoSeleccionado);
            
            // del vector kardex cargado busca en todos los registros la boleta buscada 
            arrayKadexReembolso          = vectorKardex.getKardexReembolso(boletaBuscada);
            double precioProductoVendido = arrayKadexReembolso.get(arrayKadexReembolso.size()-1).getPrecioProducto();
            int cantidadesCompradas      = 0;
            int nuevoStock               = 0;
            
            // suma todas las cantidades q se hayan comprado en partes 
            for(kardex x: arrayKadexReembolso)
            {
                cantidadesCompradas = cantidadesCompradas + x.getSalidaCant();
            }
            
            nuevoStock = productEncontrado.getCantidad() + cantidadesCompradas;
            productEncontrado.setCantidad(nuevoStock);
            productEncontradoEspecifico.setCantidad(nuevoStock);
            proveEncontrado.setCantidadDeProductos(proveEncontrado.getCantidadDeProductos() + cantidadesCompradas);
            
            // generar registro kardex de reembolso
            /*
            // constructor para cuando hay reembolso
            public kardex(String codigo, String tipoDocumento, String fecha,
                  int entradaCant, double entradaValor, double valorUnitario,
                  int saldoCant, double saldoValor) 
            */
            String codigoKardex     = vectorKardex.correlativo();
            String fecha            = objAyuda.getFecha();
            String tipodocumento    = objAyuda.generarCodigoBoleta();
            double valorUnitario    = vectorKardex.obtenerUltimoKardex().getValorUnitario();
            double entradaValor     = cantidadesCompradas * valorUnitario;
            double saldoValor       = vectorKardex.obtenerUltimoKardex().getSaldoValor() + entradaValor;
            kardex kardexReembolso  = new kardex(codigoKardex, tipodocumento, fecha,
                                                    cantidadesCompradas,entradaValor,valorUnitario
                                                 ,nuevoStock,saldoValor);
            kardexReembolso.setPrecioProducto(vectorKardex.obtenerUltimoKardex().getPrecioProducto());
            vectorKardex.agregarRegistroAlKardex(kardexReembolso);
            vectorKardex.grabarEnArchivo(kardexReembolso, nombreProducto, nombreProveedor);
            
            // actualizar listas de productos 
            vectorProductoGeneral.grabarModificareliminar();
            vectorProductoEspecifico.grabarModificareliminar(nombreProveedor);
            proveedorvector.grabarModificareliminar();
            
            // eliminar el detalle de venta ya q se reembolso, guardar en archivo
            detalleVentasVector.eliminarDetalleVenta(ultimoIDVentaIDCliente, IDProductoSeleccionado, IDCliente);
            
            // buscar idventa y actualizarlo
            int nuevoMontoTotal         = 0;
            nuevoMontoTotal             = ventasVector.buscarIDVentaIDCliente(
                                                       ultimoIDVentaIDCliente, IDCliente).getMontoTotal()
                                                       - cantidadesCompradas;
            double nuevoTotalPagar      = 0;
            double totalAPagarEliminado = cantidadesCompradas * precioProductoVendido;
            nuevoTotalPagar             = ventasVector.buscarIDVentaIDCliente(
                                                       ultimoIDVentaIDCliente, IDCliente).getTotalPagar()
                                                       - totalAPagarEliminado;
            
            ventasVector.actualizarDetallesVenta(ultimoIDVentaIDCliente, IDCliente, nuevoMontoTotal, nuevoTotalPagar);
            JOptionPane.showMessageDialog(null, "Se reembolso el producto: " + nombreProducto + " correctamente");
        }
        catch(Exception e)
        {
            System.out.println("Excepcion en btnRemmbolsar: " + e);
        }
    }//GEN-LAST:event_btnReembolsarProductoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        MenuVendedor mv = new MenuVendedor("vendedor");
        mv.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnReembolsarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReembolsarTodoActionPerformed
        // TODO add your handling code here:
        // obtener toda la lista
        try
        {
            int confirmed = JOptionPane.showConfirmDialog(null, 
            "¿Esta seguro de reembolsar todo??", "Mensaje de Avertencia",
           JOptionPane.YES_NO_OPTION);

            if (confirmed == JOptionPane.YES_OPTION)
            {
                
                detalleVentasVector.vaciarVector();
                vectorProductoEspecifico.vaciarArreglo();
                vectorKardex.vaciarVector();
                arrayKadexReembolso.clear();
                
                detalleVentasVector.cargardatos_archivo_vector(IDCliente);
                
                Cliente clienteEditar = clienteVector.buscarcodigo(IDCliente);
                
                String ultimoIDVentaIDCliente = ventasVector.encontrarUltimoIDVenta(IDCliente);
                Venta ventaEliminar = ventasVector.buscarIDVenta(ultimoIDVentaIDCliente);
                int i = 0;
                while(  i < detalleVentasVector.rows() ) 
                // obten la primera linea del archivo, y si la linea no hay nada,entonces termina
                {
                    vectorProductoEspecifico.vaciarArreglo();
                    vectorKardex.vaciarVector();
                    if(detalleVentasVector.get(i).getID_Venta().equals(ultimoIDVentaIDCliente))
                    {
                        String IDveenta         = detalleVentasVector.get(i).getID_Venta();
                        String IDProducto       = detalleVentasVector.get(i).getID_Producto();
                        int    cantidadVendida  = detalleVentasVector.get(i).getCantidadVendidaProducto();
                        String codigoBoleta     = detalleVentasVector.get(i).getCodigoBoleta();

                        Producto productEncontrado    = vectorProductoGeneral.buscarcodigo(IDProducto);

                        String nombreProveedor = productEncontrado.getProveedor();
                        String nombreProducto  = productEncontrado.getNombre();
                        
                        vectorProductoEspecifico.cargardatos_archivo_vector(nombreProveedor);
                        vectorKardex.cargardatos_archivo_vector(nombreProducto, nombreProveedor);

                        Proveedor proveEncontrado             = proveedorvector.buscarPorNombre(nombreProveedor);
                        Producto  productEncontradoEspecifico = vectorProductoEspecifico.buscarcodigo(IDProducto);

                        // ubicar la boleta
                        String boletaBuscada = detalleVentasVector.getBoletaBuscada(ultimoIDVentaIDCliente, IDProducto);

                        // del vector kardex cargado busca en todos los registros la boleta buscada 
                        arrayKadexReembolso          = vectorKardex.getKardexReembolso(boletaBuscada);
                        double precioProductoVendido = arrayKadexReembolso.get(arrayKadexReembolso.size()-1).getPrecioProducto();
                        int cantidadesCompradas      = 0;
                        int nuevoStock               = 0;

                        // suma todas las cantidades q se hayan comprado en partes 
                        for(kardex x: arrayKadexReembolso)
                        {
                            cantidadesCompradas = cantidadesCompradas + x.getSalidaCant();
                        }

                        nuevoStock = productEncontrado.getCantidad() + cantidadesCompradas;
                        productEncontrado.setCantidad(nuevoStock);
                        productEncontradoEspecifico.setCantidad(nuevoStock);
                        proveEncontrado.setCantidadDeProductos(proveEncontrado.getCantidadDeProductos() + cantidadesCompradas);

                        // generar registro kardex de reembolso
                        /*
                        // constructor para cuando hay reembolso
                        public kardex(String codigo, String tipoDocumento, String fecha,
                              int entradaCant, double entradaValor, double valorUnitario,
                              int saldoCant, double saldoValor) 
                        */
                        String codigoKardex     = vectorKardex.correlativo();
                        String fecha            = objAyuda.getFecha();
                        String tipodocumento    = objAyuda.generarCodigoBoleta();
                        double valorUnitario    = vectorKardex.obtenerUltimoKardex().getValorUnitario();
                        double entradaValor     = cantidadesCompradas * valorUnitario;
                        double saldoValor       = vectorKardex.obtenerUltimoKardex().getSaldoValor() + entradaValor;
                        kardex kardexReembolso  = new kardex(codigoKardex, tipodocumento, fecha,
                                                                cantidadesCompradas,entradaValor,valorUnitario
                                                             ,nuevoStock,saldoValor);
                        kardexReembolso.setPrecioProducto(vectorKardex.obtenerUltimoKardex().getPrecioProducto());
                        vectorKardex.agregarRegistroAlKardex(kardexReembolso);
                        vectorKardex.grabarEnArchivo(kardexReembolso, nombreProducto, nombreProveedor);

                        // actualizar listas de productos 
                        vectorProductoGeneral.grabarModificareliminar();
                        vectorProductoEspecifico.grabarModificareliminar(nombreProveedor);
                        proveedorvector.grabarModificareliminar();

                        // eliminar el detalle de venta ya q se reembolso, guardar en archivo
                        detalleVentasVector.eliminarDetalleVenta(ultimoIDVentaIDCliente, IDProducto, IDCliente);

                        JOptionPane.showMessageDialog(null, "Se reembolsaron todos los productos: " + nombreProducto + " correctamente");
                    }                
                    i++;
                }
                ventasVector.eliminar(ventaEliminar);
                ventasVector.grabarModificareliminar();
                clienteEditar.setComprasTotales(clienteEditar.getComprasTotales() - 1);
                clienteVector.grabarModificareliminar();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "operacuion cancelada");
            }
            
        }
        catch(Exception e)
        {
            System.out.println("Excepcion en btnRemmbolsar: " + e);
        }
    }//GEN-LAST:event_btnReembolsarTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaReembolso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaReembolso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaReembolso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaReembolso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaReembolso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargaCboBoxIDProduct;
    private javax.swing.JButton btnCargarCboBoxCodCliente;
    private javax.swing.JButton btnCargarTablaCompras;
    private javax.swing.JButton btnEmpezarReembolso;
    private javax.swing.JButton btnReembolsarProducto;
    private javax.swing.JButton btnReembolsarTodo;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnTerminarReembolso;
    private javax.swing.JComboBox<String> cboBoxIDClientes;
    private javax.swing.JComboBox<String> cboBoxIDProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCantCompradaProducto;
    private javax.swing.JTextField txtComprasCliente;
    private javax.swing.JTextField txtDNICliente;
    private javax.swing.JTextField txtNomCliente;
    private javax.swing.JTextField txtNomProducto;
    // End of variables declaration//GEN-END:variables
}
